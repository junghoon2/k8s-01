apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: polaris
      meta.helm.sh/release-namespace: polaris
    creationTimestamp: "2021-01-05T02:22:43Z"
    generation: 1
    labels:
      app: polaris
      app.kubernetes.io/instance: polaris
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: polaris
      component: dashboard
      helm.sh/chart: polaris-3.0.0
    name: polaris-dashboard
    namespace: polaris
    resourceVersion: "25222229"
    selfLink: /apis/extensions/v1beta1/namespaces/polaris/deployments/polaris-dashboard
    uid: 989c403f-144f-4020-8df4-7095e3cb428a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: polaris
        app.kubernetes.io/instance: polaris
        app.kubernetes.io/name: polaris
        component: dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: polaris
          app.kubernetes.io/instance: polaris
          app.kubernetes.io/name: polaris
          component: dashboard
      spec:
        containers:
        - command:
          - polaris
          - dashboard
          image: quay.io/fairwinds/polaris:3.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: dashboard
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 150m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: polaris
        serviceAccountName: polaris
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-01-05T02:23:10Z"
      lastUpdateTime: "2021-01-05T02:23:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-01-05T02:22:43Z"
      lastUpdateTime: "2021-01-05T02:23:10Z"
      message: ReplicaSet "polaris-dashboard-86d787bbb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
