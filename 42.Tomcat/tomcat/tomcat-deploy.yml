apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
  #   deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-11-02T02:27:42Z"
  generation: 1
  labels:
    app: tomcat
    chart: tomcat-0.4.1
    heritage: Tiller
    release: tomcat
  name: tomcat
  namespace: tomcat
  resourceVersion: "34126822"
  selfLink: /apis/apps/v1/namespaces/tomcat/deployments/tomcat
  uid: b12617d9-58bc-4b01-90a8-a59de92dac37
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: tomcat
      release: tomcat
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tomcat
        release: tomcat
    spec:
      containers:
      # - image: erdia22/tomcat:1.0
      - image: tomcat:8.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /sample
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: tomcat
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /sample
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/local/tomcat/webapps
          name: app-volume
        - name: config-volume
          mountPath: /usr/local/tomcat/klagoconf/klago.propertires  # 반드시 파일 이름까지 포함한다. 
          subPath: klago.propertires
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - cp /*.war /app
        image: ananwaresystems/webarchive:1.0
        imagePullPolicy: IfNotPresent
        name: war
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app
          name: app-volume
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: app-volume
      - name: config-volume
        configMap:
          name: tomcat-klago-cm
