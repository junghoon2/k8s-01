apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-ingress
  namespace: ingress
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ingress-nginx-ingress
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        diamanti.com/endpoint0: '{"network":"blue","perfTier":"high"}'
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        app: ingress-nginx-ingress
    spec:
      containers:
      - args:
        - -nginx-plus=false
        - -nginx-reload-timeout=0
        - -enable-app-protect=false
        - -nginx-configmaps=$(POD_NAMESPACE)/ingress-nginx-ingress
        - -default-server-tls-secret=$(POD_NAMESPACE)/ingress-nginx-ingress-default-server-secret
        - -ingress-class=nginx
        - -use-ingress-class-only=false
        - -watch-namespace=ingress
        - -health-status=false
        - -health-status-uri=/nginx-health
        - -nginx-debug=false
        - -v=1
        - -nginx-status=true
        - -nginx-status-port=8082
        - -nginx-status-allow-cidrs=172.17.0.0/16
        - -report-ingress-status
        - -nginx-configmaps=ingress/tcp-services
        - --tcp-services-configmap=ingress/tcp-services
        # - -tcp-services-configmap
        - -enable-leader-election=true
        - -leader-election-lock-name=ingress-nginx-ingress-leader-election
        - -enable-prometheus-metrics=true
        - -prometheus-metrics-listen-port=9113
        - -enable-custom-resources=true
        - -enable-tls-passthrough=false
        - -enable-snippets=false
        - -ready-status=true
        - -ready-status-port=8081
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        # image: nginx/nginx-ingress:1.8.1
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.33.0
        imagePullPolicy: IfNotPresent
        name: ingress-nginx-ingress
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 9113
          name: prometheus
          protocol: TCP
        - containerPort: 8081
          name: readiness-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /nginx-ready
            port: readiness-port
            scheme: HTTP
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ingress-nginx-ingress
      serviceAccountName: ingress-nginx-ingress
      terminationGracePeriodSeconds: 30
